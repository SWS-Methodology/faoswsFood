% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findMainConsumption.R
\name{findMainConsumption}
\alias{findMainConsumption}
\title{Find main consumption commodity}
\usage{
findMainConsumption(tree, suaData, threshold1 = 0.8, threshold2 = 0.2)
}
\arguments{
\item{tree}{A data.table containing the commodity tree.  In particular, it 
needs to specify the parent/child relationship.}

\item{suaData}{A data.table containing the SUA data.  The important elements
are the production, trade, stock changes and food supply.  This dataset 
should contain data from only one year and country.}

\item{threshold1}{Numeric.  For what value should we consider the food to 
supply ratio to indicate that a commodity is eaten?  This should be a 
numeric value between 0 and 1, and defaults to 0.8.}

\item{threshold2}{Numeric.  If Imports > Exports, no production is required.
But, if Prod > (I-X) * threshold2, we assign this commodity to a main 
source of food.  Likewise, if Imports < Exports, production must be at 
least Exports - Imports.  However, if Prod > (X-I) * (1 + threshold2), we 
assign this commodity to a main food.  Note that this is only used after 
the primary commodity has been identified as a non-food item (or at least 
not the main source of food).  In the code, we calculate the ratio Prod / 
(I-X) if Imports > Exports and Prod / (Exports - Imports) - 1 if Imports <
Exports.  In this way, we can compare both ratios directly to threshold2.}
}
\value{
A data.table with CPC codes and a logical value indicating whether 
  or not that commodity is the main commodity eaten.
}
\description{
This function finds the main commodity (for a particular commodity tree) 
where the commodity is consumed.
}
\examples{
\dontrun{
items = GetCodeList("faostat_one", "FS1_SUA_UPD", "measuredItemFS")[, code]
key = DatasetKey(domain = "faostat_one", dataset = "FS1_SUA_UPD", dimensions = list(
  Dimension(name = "geographicAreaFS", keys = "79"),
  Dimension(name = "measuredElementFS",
            keys = c("51", "61", "71", "91", "141")),
  Dimension(name = "timePointYears", keys = "2011"),
  Dimension(name = "measuredItemFS", keys = items)
))
suaData = GetData(key)
tree = getCommodityTree(timePointYears = "2011")
tree = unique(tree[, c("measuredItemParentCPC", "measuredItemChildCPC"),
                   with = FALSE])
tree[, measuredItemParentFS := cpc2fcl(measuredItemParentCPC,
                                       returnFirst = TRUE)]
tree[, measuredItemChildFS := cpc2fcl(measuredItemChildCPC,
                                      returnFirst = TRUE)]
tree = tree[, c("measuredItemParentFS", "measuredItemChildFS"), with = FALSE]
findMainConsumption(tree, suaData)
}

}

